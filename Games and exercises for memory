import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Cognitive Skills App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: HomePage(),
    );
  }
}

class HomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Games and Exercises'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => MemoryGamePage()),
                );
              },
              child: Text('Memory Game'),
            ),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => CognitiveExercisePage()),
                );
              },
              child: Text('Cognitive Skills Exercise'),
            ),
          ],
        ),
      ),
    );
  }
}

class MemoryGamePage extends StatefulWidget {
  @override
  _MemoryGamePageState createState() => _MemoryGamePageState();
}

class _MemoryGamePageState extends State<MemoryGamePage> {
  List<int> _numbers = [];
  List<int> _selectedNumbers = [];

  @override
  void initState() {
    super.initState();
    _generateNumbers();
  }

  void _generateNumbers() {
    _numbers = List.generate(8, (index) => index + 1)..addAll(List.generate(8, (index) => index + 1));
    _numbers.shuffle();
  }

  void _onNumberSelected(int number) {
    setState(() {
      if (_selectedNumbers.length < 2 && !_selectedNumbers.contains(number)) {
        _selectedNumbers.add(number);
        if (_selectedNumbers.length == 2) {
          if (_numbers[_selectedNumbers[0]] == _numbers[_selectedNumbers[1]]) {
            _selectedNumbers.clear();
            // Both numbers match, handle accordingly
          } else {
            // Both numbers do not match, handle accordingly
          }
        }
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Memory Game'),
      ),
      body: GridView.builder(
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 4,
        ),
        itemCount: _numbers.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              _onNumberSelected(index);
            },
            child: Container(
              margin: EdgeInsets.all(5),
              decoration: BoxDecoration(
                color: _selectedNumbers.contains(index) ? Colors.blue : Colors.grey,
                borderRadius: BorderRadius.circular(10),
              ),
              child: Center(
                child: Text(
                  _selectedNumbers.contains(index) ? _numbers[index].toString() : '',
                  style: TextStyle(
                    fontSize: 24,
                    color: _selectedNumbers.contains(index) ? Colors.white : Colors.black,
                  ),
                ),
              ),
            ),
          );
        },
      ),
    );
  }
}

class CognitiveExercisePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Cognitive Skills Exercise'),
      ),
      body: Center(
        child: Text('Cognitive Exercise Content Goes Here'),
      ),
    );
  }
}
